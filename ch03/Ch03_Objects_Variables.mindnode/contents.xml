<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string></string>
	<key>comments</key>
	<string></string>
	<key>isUsingConstrainedLayout</key>
	<true/>
	<key>keywords</key>
	<string></string>
	<key>mindMap</key>
	<dict>
		<key>associations</key>
		<array/>
		<key>color</key>
		<string>{0.000, 0.000, 0.000, 1.000}</string>
		<key>mainNodes</key>
		<array>
			<dict>
				<key>contentAlignment</key>
				<integer>1</integer>
				<key>fillColor</key>
				<string>{0.037, 0.160, 0.198, 1.000}</string>
				<key>isDecreasingBranchThickness</key>
				<true/>
				<key>isDrawingFill</key>
				<true/>
				<key>isLeftAligned</key>
				<false/>
				<key>location</key>
				<string>{-889.33907000189583, 141.72522921683967}</string>
				<key>nodeID</key>
				<string>B7A2967F-1754-4F3D-A700-C25ED6537D94</string>
				<key>strokeColor</key>
				<string>{0.273, 0.357, 0.383, 1.000}</string>
				<key>strokeStyle</key>
				<integer>0</integer>
				<key>strokeWidth</key>
				<real>2</real>
				<key>subnodes</key>
				<array>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{0.037, 0.160, 0.198, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{-654.33907000189583, -237.68613678941676}</string>
						<key>nodeID</key>
						<string>4C0CBF27-9162-457B-BC90-3D9FC6FEB89B</string>
						<key>strokeColor</key>
						<string>{0.647, 0.468, 0.027, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{0.037, 0.160, 0.198, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{-304.33907000189583, -488.68613678941676}</string>
								<key>nodeID</key>
								<string>36F6B05D-27E5-466C-AAAF-0FC8B9FBA89A</string>
								<key>strokeColor</key>
								<string>{0.647, 0.468, 0.027, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;Whenever you are designing OO systems, a good first step is to identify the things you are dealing with. Typically each type of thing becomes a class in your final program, and the things themselves are instances of these classes. &lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Whenever you are designing OO systems, a good first step is to identify the things you are dealing with. Typically each type of thing becomes a class in your final program, and the things themselves are instances of these classes. }</string>
								</dict>
							</dict>
							<dict>
								<key>attachment</key>
								<dict>
									<key>fileName</key>
									<string>A7500AF9-BA68-4B11-AEEE-C0FD3C3AFC47.png</string>
									<key>size</key>
									<string>{100, 47.355163727959699}</string>
									<key>type</key>
									<integer>2</integer>
								</dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{0.037, 0.160, 0.198, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<true/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{-304.33907000189583, -202.36371865339663}</string>
								<key>nodeID</key>
								<string>12F98D74-7B8D-4D09-A63F-B448F2A2E02C</string>
								<key>strokeColor</key>
								<string>{0.647, 0.468, 0.027, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<true/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{-119.33907000189583, -376.68613678941676}</string>
										<key>nodeID</key>
										<string>3EFBF118-8AC3-4DA6-838E-820EEBFC8AD0</string>
										<key>strokeColor</key>
										<string>{0.647, 0.468, 0.027, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;initialize method is a special method in Ruby programs. When call BookInStock.new to create a new object, Ruby allocates some memory to hold an uninitialized object and then calls that object&amp;apos;s initialize method. &lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 initialize method is a special method in Ruby programs. When call BookInStock.new to create a new object, Ruby allocates some memory to hold an uninitialized object and then calls that object's initialize method. }</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<true/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{-119.33907000189583, -262.68613678941676}</string>
										<key>nodeID</key>
										<string>3290661F-FA5E-408C-8800-1F3B17A27D2B</string>
										<key>strokeColor</key>
										<string>{0.647, 0.468, 0.027, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{puts} simply writes strings to your program&amp;apos;s standard output.  #&amp;lt;a hexadecimal number of the object&amp;apos;s unique identifier&amp;gt;&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{puts\}\uc0\u8232 simply writes strings to your program's standard output.  #&lt;a hexadecimal number of the object's unique identifier&gt;}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<true/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{-119.33907000189583, -164.68613678941676}</string>
										<key>nodeID</key>
										<string>E7161BC2-3361-4EF2-8F96-43F6BFF70124</string>
										<key>strokeColor</key>
										<string>{0.647, 0.468, 0.027, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{def to_s} a standard message, to_s, it sends to any object it wants to render as a string.  def to_s 	&amp;quot;ISBN: #{@isbn} , price:#{@price}&amp;quot; end  @isbn and @price in the initialize method are subsequently available in the to_s method? They are stored with each object and available to all the instance methods of those objects.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{def to_s\}\uc0\u8232 a standard message, to_s, it sends to any object it wants to render as a string.\u8232 \u8232 def to_s\u8232 	"ISBN: #\{@isbn\} , price:#\{@price\}"\u8232 end\u8232 \u8232 @isbn and @price in the initialize method are subsequently available in the to_s method? They are stored with each object and available to all the instance methods of those objects.}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;Typically_class&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Typically_class}</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;Everything manipulate in Ruby is an object. And every object in Ruby was generated either directly or indirectly from a class.&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Everything manipulate in Ruby is an object. And every object in Ruby was generated either directly or indirectly from a class.}</string>
						</dict>
					</dict>
					<dict>
						<key>contentAlignment</key>
						<integer>1</integer>
						<key>fillColor</key>
						<string>{0.037, 0.160, 0.198, 1.000}</string>
						<key>isDecreasingBranchThickness</key>
						<true/>
						<key>isDrawingFill</key>
						<false/>
						<key>isLeftAligned</key>
						<false/>
						<key>location</key>
						<string>{-654.33907000189583, 393.22522921683975}</string>
						<key>nodeID</key>
						<string>303AD54A-939C-4AB1-9B0C-A8FA0D85FB8A</string>
						<key>strokeColor</key>
						<string>{0.450, 0.541, 0.020, 1.000}</string>
						<key>strokeStyle</key>
						<integer>0</integer>
						<key>strokeWidth</key>
						<real>6</real>
						<key>subnodes</key>
						<array>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{0.037, 0.160, 0.198, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{-295.33907000189583, 269.31386321058324}</string>
								<key>nodeID</key>
								<string>3E7F0F85-30E2-4C50-81D8-4F6F5E05B962</string>
								<key>strokeColor</key>
								<string>{0.450, 0.541, 0.020, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{47.660929998104166, 77.313863210583236}</string>
										<key>nodeID</key>
										<string>5EC05FC2-7FF9-409C-8635-16F985131C51</string>
										<key>strokeColor</key>
										<string>{0.450, 0.541, 0.020, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>702</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{attr_reader} because writing accessor methods is such a common idiom, Ruby provides a convenient shortcut. {attr_reader} creates these attribute reader methods for you. attr_reader :isbn,:price, symbols are just a convenient way of referencing a name.  :isbn as meaning the name isbn and plain isbn as meaning the value of the variable.  It just create the accessor methods, but the variables themselves do not need to be declared - they just pop into existence when you use them.  Ruby completely decouples instance variables and accessor methods.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>0</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{attr_reader\}\uc0\u8232 because writing accessor methods is such a common idiom, Ruby provides a convenient shortcut. \{attr_reader\} creates these attribute reader methods for you.\u8232 attr_reader :isbn,:price, symbols are just a convenient way of referencing a name. \u8232 :isbn as meaning the name isbn and plain isbn as meaning the value of the variable. \u8232 It just create the accessor methods, but the variables themselves do not need to be declared - they just pop into existence when you use them. \u8232 Ruby completely decouples instance variables and accessor methods.}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{47.660929998104166, 221.31386321058324}</string>
										<key>nodeID</key>
										<string>BA61E575-F20D-4902-A17C-54291613D900</string>
										<key>strokeColor</key>
										<string>{0.450, 0.541, 0.020, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{attr_writer} 1. def price=(new_price)n , creating a Ruby method whose name ends with an equals sign. the method price= in the object, passing it the discounted price as an argument.   shortcut  attr_writer :isbn&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{attr_writer\}\uc0\u8232 1. def price=(new_price)n , creating a Ruby method whose name ends with an equals sign. the method price= in the object, passing it the discounted price as an argument. \u8232 \u8232 shortcut \u8232 attr_writer :isbn}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{47.660929998104166, 365.31386321058324}</string>
										<key>nodeID</key>
										<string>0B17CCEE-C492-4038-A2A6-7B0FA8CA75C9</string>
										<key>strokeColor</key>
										<string>{0.450, 0.541, 0.020, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{Virtual Attributes} used attribute methods to create a virtual instance variable. To the outside word, price_in_cents seems to be an attribute like any other isbn and price. Internally, though, it has no corresponding instance variable.&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{Virtual Attributes\}\uc0\u8232 used attribute methods to create a virtual instance variable. To the outside word, price_in_cents seems to be an attribute like any other isbn and price. Internally, though, it has no corresponding instance variable.}</string>
										</dict>
									</dict>
									<dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<false/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{47.660929998104166, 477.31386321058324}</string>
										<key>nodeID</key>
										<string>3CD9B469-BE6C-46B8-B9A4-1AE672CA3EBF</string>
										<key>strokeColor</key>
										<string>{0.450, 0.541, 0.020, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{attr_accessory} write and read accessory shortcut&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{attr_accessory\}\uc0\u8232 write and read accessory shortcut}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;{accessory method} define a accessory method and return the instance variables. &lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 \{accessory method\}\uc0\u8232 define a accessory method and return the instance variables. }</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{0.037, 0.160, 0.198, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{-295.33907000189583, 525.31386321058324}</string>
								<key>nodeID</key>
								<string>81F276ED-05A8-48F0-8D8E-7BAB2F8EDF7B</string>
								<key>strokeColor</key>
								<string>{0.450, 0.541, 0.020, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array/>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;When you design a class, you decide what internal state it has and also decide how that state is to appear on the outside. ThE INTERNAL STATE IS HELD IN INSTANCE variables. The external state is exposed through methods we are calling attributes. And the other actions your class can perform are just regular methods. It really is not a crucially important distinction, but by calling the external state of an object its attributes, you are helping clue people in to how they should view the class you have written.&lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 When you design a class, you decide what internal state it has and also decide how that state is to appear on the outside. ThE INTERNAL STATE IS HELD IN INSTANCE variables. The external state is exposed through methods we are calling attributes. And the other actions your class can perform are just regular methods. It really is not a crucially important distinction, but by calling the external state of an object its attributes, you are helping clue people in to how they should view the class you have written.}</string>
								</dict>
							</dict>
							<dict>
								<key>contentAlignment</key>
								<integer>1</integer>
								<key>fillColor</key>
								<string>{0.037, 0.160, 0.198, 1.000}</string>
								<key>isDecreasingBranchThickness</key>
								<true/>
								<key>isDrawingFill</key>
								<false/>
								<key>isLeftAligned</key>
								<false/>
								<key>location</key>
								<string>{-295.33907000189583, 745.22522921683981}</string>
								<key>nodeID</key>
								<string>E72B1717-4562-4291-895B-88FD7CFE2B49</string>
								<key>strokeColor</key>
								<string>{0.450, 0.541, 0.020, 1.000}</string>
								<key>strokeStyle</key>
								<integer>0</integer>
								<key>strokeWidth</key>
								<real>5</real>
								<key>subnodes</key>
								<array>
									<dict>
										<key>attachment</key>
										<dict>
											<key>fileName</key>
											<string>616FEF02-63AA-4561-8FC3-E5495D6E6C24.png</string>
											<key>size</key>
											<string>{100, 29.822732012513036}</string>
											<key>type</key>
											<integer>2</integer>
										</dict>
										<key>contentAlignment</key>
										<integer>1</integer>
										<key>fillColor</key>
										<string>{0.037, 0.160, 0.198, 1.000}</string>
										<key>isDecreasingBranchThickness</key>
										<true/>
										<key>isDrawingFill</key>
										<true/>
										<key>isLeftAligned</key>
										<false/>
										<key>location</key>
										<string>{-118.33907000189583, 733.31386321058335}</string>
										<key>nodeID</key>
										<string>D28C20CB-40D5-4F4F-9D88-F2992BCA5040</string>
										<key>strokeColor</key>
										<string>{0.450, 0.541, 0.020, 1.000}</string>
										<key>strokeStyle</key>
										<integer>0</integer>
										<key>strokeWidth</key>
										<real>4</real>
										<key>subnodes</key>
										<array/>
										<key>title</key>
										<dict>
											<key>constrainedWidth</key>
											<integer>300</integer>
											<key>htmlText</key>
											<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;Access_control&lt;/p&gt;</string>
											<key>shrinkToFitContent</key>
											<integer>1</integer>
											<key>text</key>
											<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Access_control}</string>
										</dict>
									</dict>
								</array>
								<key>title</key>
								<dict>
									<key>constrainedWidth</key>
									<integer>300</integer>
									<key>htmlText</key>
									<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;[Access Control]  &lt;/p&gt;</string>
									<key>shrinkToFitContent</key>
									<integer>1</integer>
									<key>text</key>
									<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 [Access Control]\uc0\u8232 \u8232 }</string>
								</dict>
							</dict>
						</array>
						<key>title</key>
						<dict>
							<key>constrainedWidth</key>
							<integer>300</integer>
							<key>htmlText</key>
							<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 14px "Helvetica Neue"; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;Objects and Attributes  An object is totally secretive is pretty useless -  you can create it, but then you can not do anything with it. Theses externally visible facets of an object are called its attributes.&lt;/p&gt;</string>
							<key>shrinkToFitContent</key>
							<integer>1</integer>
							<key>text</key>
							<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs28 \cf2 Objects and Attributes\uc0\u8232 \u8232 An object is totally secretive is pretty useless -  you can create it, but then you can not do anything with it. Theses externally visible facets of an object are called its attributes.}</string>
						</dict>
					</dict>
				</array>
				<key>title</key>
				<dict>
					<key>constrainedWidth</key>
					<integer>300</integer>
					<key>htmlText</key>
					<string>&lt;p style='color: rgba(251, 244, 220, 1.000000); font: 13px "Helvetica Neue"; text-align: left; -cocoa-font-postscriptname: "HelveticaNeue"; '&gt;Ruby_Objects_Variables&lt;/p&gt;</string>
					<key>shrinkToFitContent</key>
					<integer>1</integer>
					<key>text</key>
					<string>{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green244\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs26 \cf2 Ruby_Objects_Variables}</string>
				</dict>
			</dict>
		</array>
	</dict>
	<key>printInfo</key>
	<data>
	BAtzdHJlYW10eXBlZIHoA4QBQISEhAtOU1ByaW50SW5mbwGEhAhOU09iamVjdACFkoSE
	hBNOU011dGFibGVEaWN0aW9uYXJ5AISEDE5TRGljdGlvbmFyeQCUhAFpCJKEhIQITlNT
	dHJpbmcBlIQBKxZOU0hvcml6b250YWxseUNlbnRlcmVkhpKEhIQITlNOdW1iZXIAhIQH
	TlNWYWx1ZQCUhAEqhIQBY50BhpKEmZkNTlNSaWdodE1hcmdpboaShJuchIQBZp5IhpKE
	mZkMTlNMZWZ0TWFyZ2luhpKEm5ygnkiGkoSZmRVOU0hvcml6b25hbFBhZ2luYXRpb26G
	koSbnISXlwKGkoSZmRROU1ZlcnRpY2FsUGFnaW5hdGlvboaShJucpZcAhpKEmZkUTlNW
	ZXJ0aWNhbGx5Q2VudGVyZWSGkpqShJmZC05TVG9wTWFyZ2luhpKEm5ygnlqGkoSZmQ5O
	U0JvdHRvbU1hcmdpboaShJucoJ5ahoaG
	</data>
	<key>title</key>
	<string>Getting Start</string>
	<key>version</key>
	<integer>4</integer>
</dict>
</plist>
