
to_s在模块中使用，是以一种相当隐秘的方式互相作用的。模块依赖的类方法通常不多。在ruby中，这依赖关系时隐式的，通过duck class 鸭子类型来实现。
	对于Person类的细节，完全无关，在Person类中包含了模块，但文件的写入的能力，和这个类是不是Person没有一点儿关系。通过混入（mixin）功能的方式，实现了在文件中添加内容的功能。可以对Person类添加新的mixin，也可以派生新的子类，这些子类虽然不了解mixin的具体实现，但仍然拥有mixin的功能。
	要学会利用简明的单继承，先定义类的主要部分，然后用用模块添加额外功能。这种由Falvors - lisp一种早期的面向对象扩展，由MIT人工智能实验室的Howard Cannon开发。引入，在上至Smalltalk[ 一门带有纯面向对象、动态类型、反射等特性的编程语言。于1972年面世，该语言对后来的许多编程语言和思想都有重大影响。]，下至python众多采用的编程风格，就称作mixin. 在这些语言中，带mixin的载体虽然未必称做模块，但基本前提是一直的：使用单一继承结合mixin的方式，既可能合理的把各种行为大包在一起。
